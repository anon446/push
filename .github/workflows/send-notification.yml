name: Send Firebase Push Notification for Weather Alerts

on:
  schedule:
    - cron: '*/15 * * * *'  # Runs every 15 minutes
  workflow_dispatch:  # Allows manual triggering

jobs:
  send_notification:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Firebase Authentication
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' | base64 --decode > firebase-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=firebase-key.json

          ACCESS_TOKEN=$(gcloud auth application-default print-access-token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

    

      - name: Check Notification Preference
        run: |
         curl -s https://raw.githubusercontent.com/anon446/push/main/config.json -o config.json
         NOTIFICATIONS_ENABLED=$(jq -r '.notificationsEnabled' config.json)

         if [ "$NOTIFICATIONS_ENABLED" = "true" ]; then
         echo "Notifications are enabled"
         echo "NOTIFICATIONS_ENABLED=true" >> $GITHUB_ENV
         else
         echo "Notifications are disabled"
         echo "NOTIFICATIONS_ENABLED=false" >> $GITHUB_ENV
         fi


      - name: Fetch Latest Location
        run: |
         curl -s https://raw.githubusercontent.com/anon446/push/main/location.json -o location.json
         if ! jq empty location.json 2>/dev/null; then
         echo "Error: Invalid JSON format in location.json"
         exit 1
         fi
         LAT=$(jq -r '.lat' location.json)
         LON=$(jq -r '.lon' location.json)
          if [[ -z "$LAT" || -z "$LON" ]]; then
          echo "Error: Latitude or Longitude not found in location.json"
          exit 1
          fi
         echo "LAT=$LAT" >> $GITHUB_ENV
         echo "LON=$LON" >> $GITHUB_ENV

      - name: Fetch Weather Data from Tomorrow.io
        id: fetch_weather
        run: |
          response=$(curl -s "https://api.tomorrow.io/v4/weather/forecast?location=${{ env.LAT }},${{ env.LON }}&apikey=${{ secrets.TOMORROW_IO_API_KEY }}")

          if [[ -z "$response" || "$response" == "null" ]]; then
          echo "Error: Failed to fetch weather data"
          exit 1
          fi
          echo "$response" > weather.json

      - name: Check for Good Weather
        id: check_weather
        run: |
         if [ "$NOTIFICATIONS_ENABLED" = "true" ]; then
          GOOD_WEATHER=$(jq -r '.timelines.hourly[0].values.weatherCode' weather.json)
          echo "Detected Weather Code: $GOOD_WEATHER"
          if [[ "$GOOD_WEATHER" == "1000" || "$GOOD_WEATHER" == "1100" || "$GOOD_WEATHER" == "1101" || "$GOOD_WEATHER" == "1102" || "$GOOD_WEATHER" == "1001" ]]; then
           echo "Good weather detected!"
           echo "send_notification=true" >> $GITHUB_ENV
          else
           echo "No good weather detected."
           echo "send_notification=false" >> $GITHUB_ENV
          fi
         else
          echo "Notifications disabled."
          echo "send_notification=false" >> $GITHUB_ENV
         fi

      - name: Send Push Notification via FCM
        if: env.send_notification == 'true'
        run: |
          curl -X POST "https://fcm.googleapis.com/v1/projects/${{ secrets.FIREBASE_PROJECT_ID }}/messages:send" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "message": {
                "token": "${{ secrets.FCM_DEVICE_TOKEN }}",
                "notification": {
                  "title": "Great Weather Alert",
                  "body": "The weather is clear and beautiful!"
                },
                "android": {
                  "priority": "high"
                }
              }
            }'
